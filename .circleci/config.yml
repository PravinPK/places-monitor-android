version: 2.0
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      # - run:
      #     name: ChmodPermssion
      #     command: sudo chmod +x code/gradlew  
      # - run:
      #     name: Javadoc
      #     command: code/gradlew -q -p code/places-monitor-android javadocPublic       
      # - run:
      #     name: Build
      #     command: code/gradlew -p code/places-monitor-android assemblePhoneCoreBundleDebug
      - run:
          name: Build
          command: echo BuildSuccessfullll
  test:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          name: test
          command: echo testSuccessfull
      # - run:
      #     name: UnitTests
      #     command: code/gradlew -p code/places-monitor-android platformUnitTestJacocoReport
  deploy:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      # - run:
      #     name: Bintray Upload
      #     command: code/gradlew -p code/places-monitor-android bintrayUpload -PapiKey=0ba8e3246027e34d70511583e5c72b103d3cedf7    
      - run:
          name: deploy
          command: echo deploySuccessfulll

workflows:
  version: 2
  build-test-and-approval-deploy:
    jobs:
      - build  # your custom job from your config, that builds your code
      - test: # your custom job; runs test suite 1
          requires: # test1 will not run until the `build` job is completed.
            - build
      - hold: # <<< A job that will require manual approval in the CircleCI web application.
          type: approval # <<< This key-value pair will set your workflow to a status of "On Hold"
          requires: # We only run the "hold" job when test2 has succeeded
           - test
      # On approval of the `hold` job, any successive job that requires the `hold` job will run. 
      # In this case, a user is manually triggering the deploy job.
      - deploy:
          requires:
            - hold